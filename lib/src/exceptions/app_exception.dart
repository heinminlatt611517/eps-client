/// Base class for all client-side errors that can be generated by the app
sealed class AppException implements Exception {
  AppException(this.code, this.message);
  final String code;
  final String message;

  @override
  String toString() => message;
}

String fn(AppException exception) {
  return switch (exception) {
    WeakPasswordException() => 'Password is too weak',
    EmptyPhoneNumberOrPasswordException() => "Empty phone number or password",
    EmailAlreadyInUseException() => 'Email already in use',
    WrongPasswordException() => 'Wrong password',
    UserNotFoundException() => 'User not found',
    CartSyncFailedException() => 'Cart sync failed',
    PaymentFailureEmptyCartException() => 'Payment failure',
    ParseOrderFailureException(status: final status) => 'Parse error: $status',
  };
}

class EmptyPhoneNumberOrPasswordException extends AppException {
  EmptyPhoneNumberOrPasswordException()
      : super('empty-email-or-password', 'Empty email or password');
}

class EmailAlreadyInUseException extends AppException {
  EmailAlreadyInUseException()
      : super('email-already-in-use', 'Email already in use');
}

class WeakPasswordException extends AppException {
  WeakPasswordException() : super('weak-password', 'Password is too weak');
}

class WrongPasswordException extends AppException {
  WrongPasswordException() : super('wrong-password', 'Wrong password');
}

class UserNotFoundException extends AppException {
  UserNotFoundException() : super('user-not-found', 'User not found');
}

/// Cart
class CartSyncFailedException extends AppException {
  CartSyncFailedException()
      : super('cart-sync-failed',
      'An error has occurred while updating the shopping cart');
}

/// Checkout
class PaymentFailureEmptyCartException extends AppException {
  PaymentFailureEmptyCartException()
      : super('payment-failure-empty-cart',
      'Can\'t place an order if the cart is empty');
}

/// Orders
class ParseOrderFailureException extends AppException {
  ParseOrderFailureException(this.status)
      : super('parse-order-failure', 'Could not parse order status: $status');
  final String status;
}